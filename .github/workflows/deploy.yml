name: ProtoType - Deploy to AWS EC2

on:
  push:
    branches:
      - dev

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup .env file
      run: |
        echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
        echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
        echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
        echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
        echo "TAG_VERSION=${{ secrets.TAG_VERSION }}" >> .env
        echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> .env

    - name: Debugging1
      run: |
        echo "Debugging Starts"
        cat .env
        echo "Debugging Ends"

    - name: Login to DockerHub
      run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Build and push Docker image
      run: |
        docker-compose build
        docker-compose push

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Copy docker-compose.yml to EC2
      uses: appleboy/scp-action@master
      with:
        key: ${{ secrets.EC2_SSH_KEY }}
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        source: "./docker-compose.yml"
        target: "/myconfig/compose/"

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.6
      with:
        key: ${{ secrets.EC2_SSH_KEY }}
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        script: |       
          cd /myconfig/compose
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "TAG_VERSION=${{ secrets.TAG_VERSION }}" >> .env
          echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> .env
          
          sudo docker-compose pull ${{ secrets.TAG_VERSION }} && docker-compose up -d